name: Laravel CI/CD Pipeline

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  # old version
  # laravel-tests:
    # runs-on: ubuntu-latest

    # steps:
    # - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
    #   with:
    #     php-version: '8.0'
    # - uses: actions/checkout@v4
    # - name: Copy .env
    #   run: php -r "file_exists('.env') || copy('.env.example', '.env');"
    # - name: Install Dependencies
    #   run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
    # - name: Generate key
    #   run: php artisan key:generate
    # - name: Directory Permissions
    #   run: chmod -R 777 storage bootstrap/cache
    # - name: Create Database
    #   run: |
    #     mkdir -p database
    #     touch database/database.sqlite
    # - name: Execute tests (Unit and Feature tests) via PHPUnit/Pest
    #   env:
    #     DB_CONNECTION: sqlite
    #     DB_DATABASE: database/database.sqlite
    #   run: php artisan test

  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Start Docker Compose services
        run: |
          docker compose --env-file .env.docker up -d workspace
          sleep 10  # Wait for services to be ready
          docker compose --env-file .env.docker ps
      - name: Run Tests
        run: |
          docker compose --env-file .env.docker exec workspace "cd laravel-ci-cd-github-action && php artisan test"

      - name: Stop Docker Compose
        run: docker compose down

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    # if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and Push Docker Image
        run: |
          echo ${{ github.sha }}
          docker build -t laravel-ci-cd-github-action-workspace:${{ github.sha }} .
          docker tag laravel-ci-cd-github-action-workspace:${{ github.sha }} dominhsu/laravel-ci-cd-github-action-workspace:${{ github.sha }}
          docker push dominhsu/laravel-ci-cd-github-action-workspace:${{ github.sha }}

      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          # thư mục laradock nằm ngang với thư mục code
          # sed -i~ '/^WORKSPACE_IMAGE=/s/=.*/=dominhsu/laravel-ci-cd-github-action-workspace:${{ github.sha }}/' .env => ~ là tạo file backup
          script: |
            cd /home/laradock-laravel-crawl-prj 
            pwd
            docker pull dominhsu/laravel-ci-cd-github-action-workspace:${{ github.sha }}
            echo "dominhsu/laravel-ci-cd-github-action-workspace:${{ github.sha }}"
            docker compose -f docker-compose-image-laravel-ci-cd-github-action.yml down
            echo "docker compose down"
            sed -i '/^WORKSPACE_IMAGE=/s/=.*/=${{ github.sha }}/' .env
            echo "change version of workspace"
            docker compose -f docker-compose-image-laravel-ci-cd-github-action.yml build --no-cache workspace
            echo "docker compose build"
            docker compose -f docker-compose-image-laravel-ci-cd-github-action.yml up -d nginx mysql
            echo "docker compose up"